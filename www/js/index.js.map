{"version":3,"file":"index.js","sources":["webpack:///webpack/bootstrap","webpack:///./www/js/app-importer.import","webpack:///./www/js/_index.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport var modules = [];\n\n  \n  ","// const { orderedModuleNames } = require('@things-factory/env')\n// const moduleConfigMap = {}\n// const path = require('path')\n// const fs = require('fs')\n\n// var modulePath = path.resolve(process.cwd(), 'node_modules')\n\n// try {\n//   const thingsdir = path.resolve(modulePath, '@things-factory')\n//   const folders = fs.readdirSync(thingsdir)\n\n//   console.log(thingsdir, folders)\n\n//   /**\n//    * package.json의 things-factory 속성이 truthy 인 경우를 필터링한다.\n//    */\n//   folders.forEach(folder => {\n//     try {\n//       const pkg = require(path.resolve(thingsdir, folder, 'package.json'))\n\n//       if (pkg['things-factory']) {\n//         moduleConfigMap[pkg.name] = {\n//           pkg,\n//           config: path.resolve(thingsdir, folder, 'things-factory.config.js')\n//         }\n//       }\n//     } catch (e) {\n//       console.warn(e)\n//     }\n//   })\n\n//   console.log(moduleConfigMap)\n// } catch (e) {\n//   console.warn('[things-factory-module-loader]', '@things-factory module folder not found.')\n// }\nimport apps from './app-importer.import'\n\nvar app = {\n  // Application Constructor\n  initialize: function() {\n    document.addEventListener('deviceready', this.onDeviceReady.bind(this), false)\n  },\n\n  // deviceready Event Handler\n  //\n  // Bind any cordova events here. Common events are:\n  // 'pause', 'resume', etc.\n  onDeviceReady: function() {\n    window.open = window.open = cordova.InAppBrowser.open\n\n    networkinterface.getWiFiIPAddress(\n      ipInformation => {\n        this.ipInformation = ipInformation\n\n        this.iab = cordova.InAppBrowser.open(`http://192.168.1.27:3000`, '_self', 'location=no,zoom=no')\n        this.iab.addEventListener('loadstop', e => {\n          console.log('loadstop', e)\n        })\n        this.iab.addEventListener('message', e => {\n          if (!e || !e.data) return\n          var { type, detail } = e.data\n\n          switch (type) {\n            case 'scan-barcode':\n              this.scanBarcode()\n              break\n          }\n\n          apps.forEach(app => {\n            app.onMessage && app.onMessage(type, detail)\n          })\n        })\n      },\n      () => {\n        console.log('no WIFI')\n      }\n    )\n  },\n\n  scanBarcode: function() {\n    var iab = this.iab\n    cordova.plugins.barcodeScanner.scan(\n      function(result) {\n        iab.executeScript({\n          code: `\n          window.dispatchEvent(\n            new CustomEvent('barcode-respond', {\n              detail: \"${result.text}\"\n            })\n          );\n          `\n        })\n      },\n      function(error) {\n        alert('Scanning failed: ' + error)\n      },\n      {\n        showFlipCameraButton: true, // iOS and Android\n        showTorchButton: true, // iOS and Android\n        torchOn: true, // Android, launch with the torch switched on (if available)\n        saveHistory: true, // Android, save scan history (default false)\n        prompt: 'Place a barcode inside the scan area', // Android\n        resultDisplayDuration: 500, // Android, display scanned text for X ms. 0 suppresses it entirely, default 1500\n        formats: 'QR_CODE,PDF_417', // default: all but PDF_417 and RSS_EXPANDED\n        disableAnimations: false, // iOS\n        disableSuccessBeep: false // iOS and Android\n      }\n    )\n  }\n}\n\napp.initialize()\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClsourceRoot":""}