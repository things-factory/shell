#!/usr/bin/env node

'use strict'

const args = require('args')
const path = require('path')

const createConnection = require('typeorm').createConnection
const appRootPath = require('app-root-path').path

const inquirer = require('inquirer')
const chalk = require('chalk')

const MODE_QUESTION = [
  {
    type: 'list',
    name: 'mode',
    message: 'Mode:',
    choices: [
      {
        name: 'Development',
        value: 'development'
      },
      {
        name: 'Production',
        value: 'production'
      }
    ],
    default: 'development'
  }
]

start()

function start() {
  doModePrompt()
}

async function doModePrompt() {
  var answers = await inquirer.prompt(MODE_QUESTION)

  process.env.NODE_ENV = answers.mode == 'development' ? 'development' : 'production'

  let ormconfig

  try {
    ormconfig = require(path.resolve(appRootPath, 'ormconfig'))
  } catch (e) {
    ormconfig = require('@things-factory/shell/ormconfig')
  }

  if (ormconfig.host) {
    await confirmHost(ormconfig.host)
  }

  migrate(ormconfig)
}

async function confirmHost(host) {
  return await inquirer.prompt([
    {
      type: 'input',
      name: 'hostConfirm',
      message: `Please type [${chalk.bold.cyan(host)}] to confirm`,
      validate: v => {
        return v == host ? true : 'Wrong typed!'
      },
      transformer: (v, answers, flags) => {
        return v == host ? chalk.greenBright(v) : chalk.red(v)
      }
    }
  ])
}

function migrate(ormconfig) {
  createConnection({
    ...ormconfig,
    logging: true
  }).then(async (connection, ...others) => {
    args.option('undo', 'Reverts last executed migration')
    const flags = args.parse(process.argv)

    console.log('Database connection established')

    if (flags.undo) {
      await connection.undoLastMigration()
    } else {
      await connection.runMigrations()
    }

    await connection.close()
    console.log('Database Migration Done.')

    /*
     * migration 후 프로세스가 종료되지 않는 경우가 있기 때문에,
     * 강제로 종료시키는 코드를 추가함. Async 처리 미숙으로 예상함.
     * (TODO check board-ui migration)
     */
    process.exit(0)
  })
}
